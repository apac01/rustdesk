name: Windows Custom (Portable, Secrets)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      # --- VCPKG KUR & OPUS YÜKLE ---
      - name: Install vcpkg
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg $env:USERPROFILE\vcpkg
          & $env:USERPROFILE\vcpkg\bootstrap-vcpkg.bat

      - name: Set vcpkg env
        shell: pwsh
        run: |
          # Dinamik linkleme için:
          "VCPKG_ROOT=$env:USERPROFILE\vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "VCPKG_DEFAULT_TRIPLET=x64-windows" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "RUST_BACKTRACE=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install opus via vcpkg
        shell: pwsh
        run: |
          & $env:USERPROFILE\vcpkg\vcpkg.exe install opus:x64-windows

      # (İstersen statik bağlamak için üstteki iki adımı şu ikiliyle değiştir:
      # VCPKG_DEFAULT_TRIPLET=x64-windows-static-md
      # vcpkg install opus:x64-windows-static-md)

      - name: Build (release)
        shell: pwsh
        run: cargo build --release

      - name: Create RustDesk2.toml with secrets
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          $server = "${{ secrets.RD_SERVER }}"
          $key    = "${{ secrets.RD_KEY }}"
          if (-not $server) { throw "RD_SERVER secret missing" }
          if (-not $key)    { throw "RD_KEY secret missing" }
          if ($key -notmatch "^hbbs_pubkey_1=") { throw "RD_KEY must start with hbbs_pubkey_1=" }
          $content = "[server]`nhost = `"$server`"`nkey  = `"$key`""
          Set-Content -Path dist/RustDesk2.toml -Value $content -Encoding UTF8

      - name: Collect binaries
        shell: pwsh
        run: Copy-Item target/release/rustdesk.exe dist/RustDesk.exe

      - name: Package zip
        shell: pwsh
        run: Compress-Archive -Path dist/* -DestinationPath rustdesk-windows-custom-portable.zip -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-custom-portable
          path: rustdesk-windows-custom-portable.zip
          if-no-files-found: error
